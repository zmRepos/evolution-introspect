package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
#if(${table.serviceInterface})
import ${package.Service}.${table.serviceName};
#end
import jakarta.annotation.Resource;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * $!{table.comment} 服务实现类
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@Service
public class ${table.serviceImplName} implements ${table.serviceName} {

    @Resource
    private ${entity}Mapper ${table.entityPath}Mapper;

    @Override
    @Transactional(rollbackFor = Exception.class)
    public String create(${entity}BO bo) {
        ${entity} ${table.entityPath} = ${entity}Convert.INSTANCE.bo2Entity(bo);
        ${table.entityPath}Mapper.insert(${table.entityPath});
        return ${table.entityPath}.getId();
    }

    @Override
    @Transactional(rollbackFor = Exception.class)
    public boolean update(String id, ${entity}BO bo) {
        ${entity} ${table.entityPath} = ${entity}Convert.INSTANCE.bo2Entity(bo);
        return ${table.entityPath}Mapper.updateById(${table.entityPath}) > 0;
    }

    @Override
    @Transactional(rollbackFor = Exception.class)
    public boolean delete(String id) {
        return ${table.entityPath}Mapper.deleteById(id) > 0;
    }

    @Override
    public ${entity}VO get(String id) {
        return ${entity}Convert.INSTANCE.entity2Vo(${table.entityPath}Mapper.selectById(id));
    }

    @Override
    public IPage<${entity}SimpleVO> page(${entity}SearchBO bo, Page<${entity}> pageInfo){
        IPage<${entity}SimpleVO> page = ${table.entityPath}Mapper.selectPage(bo, pageInfo);
        return page;
    }

}
